#!/bin/sh

# Exit on errors
set -e

# Be verbose
set -x

mkdir -p /tmp/system-overlay 
cd /tmp/system-overlay

# Wallpaper
# TODO: Also check
# https://papers.co/desktop/vg41-ribbon-abstract-art-blue-pattern/
# https://papers.co/desktop/vm16-abstract-blue-rhytm-pattern/
# wget "https://res.allmacwallpaper.com/get/iMac-21-inch-wallpapers/Minimalist-blue-1920x1080/1686-9.jpg" -O "${uzip}"/usr/local/share/slim/themes/default/background.jpg
wget "https://github.com/helloSystem/ISO/releases/download/assets/graphite.jpg" -O "${uzip}"/usr/local/share/slim/themes/default/background.jpg

# Use blue folder icons instead of the ones packaged in FreeBSD which have yellow folder icons
cd /tmp
wget http://archive.ubuntu.com/ubuntu/pool/universe/x/xubuntu-artwork/xubuntu-icon-theme_16.04.2_all.deb
tar xfv xubuntu-icon-theme_16.04.2_all.deb
tar xfv data.tar.xz
mkdir -p "${uzip}"/usr/local/share/icons/
mv ./usr/share/icons/elementary-xfce "${uzip}"/usr/local/share/icons/
mv ./usr/share/doc/xubuntu-icon-theme/copyright "${uzip}"/usr/local/share/icons/elementary-xfce/
sed -i -e 's|usr/share|usr/local/share|g' "${uzip}"/usr/local/share/icons/elementary-xfce/copyright
rm "${uzip}"/usr/local/share/icons/elementary-xfce/copyright-e
cd -

# Cursor theme with HiDPi Support, sizes: 22 24 28 32 40 48 56 64 72 80 88 96
wget -c https://github.com/ful1e5/apple_cursor/releases/download/v1.0.6/macOSBigSur.tar.gz
tar xfv macOSBigSur.tar.gz
mv macOSBigSur "${uzip}/usr/local/share/icons/"
( cd "${uzip}/usr/local/share/icons/" ; ln -s macOSBigSur default )
rm macOSBigSur.tar.gz

# Icon
wget "https://raw.githubusercontent.com/helloSystem/hello/master/branding/computer-hello.png" -O "${uzip}"/usr/local/share/icons/elementary-xfce/devices/128/computer-hello.png

# Filer
wget https://github.com/helloSystem/Filer/releases/download/continuous/Filer_FreeBSD.zip
unzip Filer_FreeBSD.zip
rm -f Filer_FreeBSD.zip

# QtPlugin
wget https://github.com/helloSystem/QtPlugin/releases/download/continuous/QtPlugin_FreeBSD.zip
unzip QtPlugin_FreeBSD.zip
cp -Rf QtPlugin/ "${uzip}/"
rm -f QtPlugin_FreeBSD.zip
rm -rf QtPlugin/
wget https://raw.githubusercontent.com/helloSystem/QtPlugin/master/stylesheet.qss
mkdir -p "${uzip}/usr/local/etc/xdg/"
sudo mv stylesheet.qss "${uzip}/usr/local/etc/xdg/"

# launch
wget https://github.com/helloSystem/launch/releases/download/continuous/launch_FreeBSD.zip
unzip launch_FreeBSD.zip
mv launch "${uzip}/usr/local/bin/"
rm -f launch_FreeBSD.zip

# DSBexec
# FIXME: Get it into ports, and install it from a package instead
wget https://github.com/helloSystem/DSBexec/releases/download/continuous/dsbexec_FreeBSD.zip
unzip dsbexec_FreeBSD.zip
mv dsbexec "${uzip}/usr/local/bin/"
rm -f dsbexec_FreeBSD.zip

# Menu
wget https://github.com/helloSystem/Menu/releases/download/continuous/Menu_FreeBSD.zip
unzip Menu_FreeBSD.zip
rm -f Menu_FreeBSD.zip

# TODO: Get self-hosted gmenudbusmenuproxy
# because the one from pkg pulls in a lot of KDE Plasma
wget https://github.com/helloSystem/ISO/releases/download/assets/gmenudbusmenuproxy
chmod +x gmenudbusmenuproxy
mv gmenudbusmenuproxy "${uzip}/usr/local/bin/"

# Dock
wget https://github.com/helloSystem/Dock/releases/download/continuous/Dock_FreeBSD.zip
unzip Dock_FreeBSD.zip
rm -f Dock_FreeBSD.zip

mv * "${uzip}/System/"

# Symlink menubar in place; FIXME: Remove once desktop2app does not need to restart it from there anymore
chroot "${uzip}" ln -s /System/Menu.AppDir/usr/bin/menubar /usr/local/bin

# Add applications from the helloSystem/Utilities repository
mkdir -p "${uzip}/Applications/"
mkdir -p "${uzip}/System/"
wget https://github.com/helloSystem/Utilities/archive/master.zip
unzip master.zip
mv 'Utilities-master/Falkon.app' "${uzip}/Applications/"
mv 'Utilities-master/3D Printing' "${uzip}/Applications/"
mv 'Utilities-master/Audio' "${uzip}/Applications/"
mv 'Utilities-master/Developer' "${uzip}/Applications/"
mv 'Utilities-master/Developer Preview' "${uzip}/Applications/"
mv 'Utilities-master/Graphics' "${uzip}/Applications/"
mv 'Utilities-master/Office' "${uzip}/Applications/"
mv 'Utilities-master/Preferences' "${uzip}/Applications/"
mv 'Utilities-master/System'/* "${uzip}/System/"
mv 'Utilities-master/Utilities' "${uzip}/Applications/"
mv 'Utilities-master/Video' "${uzip}/Applications/"
( cd "${uzip}/System/Welcome.app/Resources/" && wget -q "https://github.com/helloSystem/Utilities/releases/download/assets/pamgaea-by-kevin-macleod-from-filmmusic-io.ogg" )
rm -rf master.zip Utilities-master/

# Required for Remote Assistance.app
wget -c https://github.com/gjedeer/tuntox/releases/download/0.0.9/tuntox-freebsd-x64 -O tuntox
chmod +x tuntox
mv tuntox "${uzip}/usr/local/bin/"

# BuildNotify.app: Notifications about continuous build server status
wget https://github.com/anaynayak/buildnotify/archive/2.0.0.zip
unzip 2.0.0.zip
mkdir -p BuildNotify.app
mv buildnotify-2.0.0 BuildNotify.app/Resources
( cd BuildNotify.app && ln -s Resources/buildnotifyapplet.py BuildNotify )
rm -f 2.0.0.zip
sed -i -e 's|/usr/bin/env python|/usr/bin/env python3|g' BuildNotify.app/Resources/buildnotifyapplet.py
rm -f BuildNotify.app/Resources/buildnotifyapplet.py-e
mv BuildNotify.app "${uzip}/Applications/Utilities/"

# Lector.app: E-book reader
# Requires: py37-xmltodict py37-beautifulsoup
git clone https://github.com/BasioMeusPuga/Lector
rm -rf Lector/.git
mv Lector Lector.app
mkdir -p Lector.app/Resources
mv Lector.app/* Lector.app/Resources 2>/dev/null || true
( cd Lector.app/ ; ln -s Resources/lector/__main__.py Lector )
cp Lector.app/Resources/lector/resources/raw/Lector.png Lector.app/Resources/
mv Lector.app "${uzip}"/Applications

# Sticky Notes.app
# Requires: py37-qt5-dbus
git clone https://gitlab.com/william.belanger/qtpad --depth 1
rm -rf qtpad/screenshots
mv qtpad/qtpad qtpad/Resources
mv qtpad/* qtpad/Resources 2>/dev/null || true
rm -rf qtpad/.git
( cd qtpad ; ln -s Resources/__init__.py "Sticky Notes" )
sed -i -e 's|/usr/bin/python3|/usr/bin/env python3|g' qtpad/Resources/__init__.py
rm qtpad/Resources/__init__.py-e
cp qtpad/Resources/icons/qtpad.svg "qtpad/Resources/Sticky Notes.svg"
rsvg-convert -a -w 256 -h 256 "qtpad/Resources/Sticky Notes.svg" -o "qtpad/Resources/Sticky Notes.png"
mv qtpad/ "Sticky Notes.app"
mv "Sticky Notes.app" "${uzip}"/Applications/Utilities

# QHexEdit
wget https://github.com/helloSystem/QHexEdit/releases/download/continuous/QHexEdit_FreeBSD.zip
unzip QHexEdit_FreeBSD.zip
mv QHexEdit.app "${uzip}/Applications/Developer/"
rm -f QHexEdit_FreeBSD.zip

# Fonts
wget https://github.com/ArtifexSoftware/urw-base35-fonts/archive/20200910.zip
unzip 20200910.zip
mkdir -p "${uzip}/usr/local/share/fonts/TTF/"
cp -R urw-base35-fonts-20200910/fonts/*.ttf "${uzip}/usr/local/share/fonts/TTF/"
rm -rf urw-base35-fonts-20200910/ 20200910.zip

# Applications
mkdir -p "${uzip}/Applications"
chmod g+w "${uzip}/Applications"
# chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/org.kde.falkon.desktop /Applications/ # See workaround below
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/featherpad.desktop /Applications/
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/qpdfview.desktop /Applications/

# Links on the Desktop
# mkdir -p "${uzip}"/usr/share/skel/Desktop
# cd "${uzip}"/usr/share/skel/Desktop/
# ln -s /Applications .

# More Preferences
mkdir -p "${uzip}/Applications/Preferences"
chmod g+w "${uzip}/Applications/Preferences"
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/lxqt-config-globalkeyshortcuts.desktop /Applications/Preferences/
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/arandr.desktop /Applications/Preferences/ -g
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/system-config-printer.desktop /Applications/Preferences/
echo "GenericName=Sound" >> "${uzip}"/usr/local/share/applications/dsbmixer.desktop
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/dsbmixer.desktop /Applications/Preferences/ -g

# More Utilities
mkdir -p "${uzip}/Applications/Utilities"
chmod g+w "${uzip}/Applications/Utilities"
# chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/org.kde.systemmonitor.desktop /Applications/Utilities/ # TODO: Find lighter replacement
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/qterminal.desktop /Applications/Utilities/

# cp "${uzip}"/usr/local/share/applications/usr_local_lib_qt5_bin_assistant.desktop "${uzip}"/tmp/documentation.desktop
# sed -i -e 's|^GenericName=.*|GenericName=Documentation|g' "${uzip}"/tmp/documentation.desktop
# sed -i -e 's|^Icon=.*|Icon=documentation_section|g' "${uzip}"/tmp/documentation.desktop
# chroot "${uzip}" desktop2app /tmp/documentation.desktop /Applications/Utilities -g

# Desktop
chroot "${uzip}" /usr/local/bin/desktop2app /usr/share/skel/Desktop/computer.desktop /usr/share/skel/Desktop/
rm -f "${uzip}"/usr/share/skel/Desktop/computer.desktop

# Remove non-hello xessions desktop files
# to silence misleading messages from slim on the command line
rm -rf ${uzip}/usr/local/share/xsessions/*.desktop

# Finishing touches on installed packages
cp /etc/resolv.conf ${uzip}/etc/resolv.conf
mount_nullfs ${packages} ${uzip}/var/cache/pkg
mount -t devfs devfs ${uzip}/dev
# Workaround for: appmenu-gtk-module is not yet in quarterly packages; FIXME: install it from the packages once it is there
# https://github.com/helloSystem/ISO/issues/20
# FIXME: This fails on 13-CURRENT https://github.com/helloSystem/ISO/issues/27
IGNORE_OSVERSION=yes /usr/local/sbin/pkg-static -c "${uzip}" add "https://github.com/helloSystem/Menu/releases/download/helper/appmenu-gtk-module-0.7.3.2.txz" || true
/usr/local/sbin/pkg-static -c "${uzip}" install appmenu-gtk-module || true

# Workaround for disappeared falkon package
# This works only if all dependency pkgs have been added beforehand
# IGNORE_OSVERSION=yes /usr/local/sbin/pkg-static -c "${uzip}" add "https://github.com/helloSystem/ISO/releases/download/fallback/falkon-3.1.0.txz" || true

# Remove pkg (it will be bootstrapped if needed)
# chroot "${uzip}" sudo pkg remove -y -f pkg # Breaks furybsd-init-helper
chroot "${uzip}" pkg lock hello # Prevent the hello package from being upgraded with an unrelated package of the same name
rm ${uzip}/etc/resolv.conf
umount ${uzip}/var/cache/pkg
umount ${uzip}/dev

# Workaround for disappeared falkon package
# chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/org.kde.falkon.desktop /Applications/

# Autostart
mkdir -p "${uzip}/Applications/Autostart/"
chmod g+w "${uzip}/Applications/Autostart/"
( cd "${uzip}/Applications/Autostart/" ; ln -s ../Utilities/BuildNotify.app . )
( cd "${uzip}/Applications/Autostart/" ; ln -s ../Utilities/"Sticky Notes.app" . )

# Silence late boot messages
cat > /tmp/rc <<\EOF
#!/bin/sh

# The following block was added by helloSystem
# FIXME: Let us know how to do this properly
# Silence messages if boot_mute="YES" is set
if [ "$(kenv boot_mute)" = "YES" ] ; then
        conscontrol delete ttyv0 >/dev/null 2>&1
        exec 1>>/dev/null 2>&1
fi
#
EOF
cat "${uzip}/etc/rc" >> /tmp/rc
mv /tmp/rc "${uzip}/etc/rc"

# Silence shutdown messages
cat > /tmp/rc.shutdown <<\EOF
#!/bin/sh

# The following block was added by helloSystem
# FIXME: Let us know how to do this properly
# Silence messages if boot_mute="YES" is set
if [ "$(kenv boot_mute)" = "YES" ] ; then
        exec 1>>/dev/null 2>&1
fi
#
EOF
cat "${uzip}/etc/rc.shutdown" >> /tmp/rc.shutdown
mv /tmp/rc.shutdown "${uzip}/etc/rc.shutdown"

# Prevent boot from being visually interrupted by vidcontrol related errors
mv "${uzip}/usr/sbin/vidcontrol" "${uzip}/usr/sbin/vidcontrol.original"
cat > "${uzip}/usr/sbin/vidcontrol" <<\EOF
#!/bin/sh
exit 0
EOF
chmod +x "${uzip}/usr/sbin/vidcontrol"

# Disable most text-based consoles, especially ttyv0,
# to prevent boot from being visually interrupted by login prompts
mv "${uzip}/etc/ttys" "${uzip}/etc/ttys.original"
cat > "${uzip}/etc/ttys" <<\EOF
ttyv1   "/usr/libexec/getty Pc"         xterm   on  secure
EOF

# Prevent boot from being visually interrupted by syslog messages
# by commenting out the line that ends in '/dev/console'
sed -i -e 's|^\(.*/dev/console\)|# \1|g' "${uzip}/etc/syslog.conf"
rm "${uzip}/etc/syslog.conf-e"

# Workaround to get rounded corners as long as picom in FreeBSD ports
# does not have this yet; FIXME: Remove once no longer needed
wget https://github.com/helloSystem/ISO/releases/download/assets/picom.tar.bz2
tar xf picom.tar.bz2
mv picom "${uzip}/usr/local/bin/picom"
rm -f picom.tar.bz2

# https://github.com/helloSystem/hello/issues/50#issuecomment-753237990
# Workaround to allow unmounting as normal user
# setuid root
chmod +s "${uzip}/sbin/umount"

# Remove surrogate fonts
# FIXME: Get this dependency removed from packages upstream
# sudo pkg remove dejavu
# would result in the deinstallation of 2GB of the desktop
# Can we have a stand-in dummy package that would be used instead?
# https://github.com/helloSystem/ISO/issues/91
rm -rf "${uzip}/usr/local/share/fonts/dejavu"
rm -rf "${uzip}/usr/local/share/fonts/TTF"/luxi*
# Liberation was released in 2007 by Red Hat, who had commissioned the designs from the 
# commercial foundry Ascender Corporationn Serif, and Liberation Mono. 
# Designed to have the same metrics as the proprietary Monotype fonts 
# Arial, Times New Roman, and Courier New. Ever since, every Linux desktops looks ugly
rm -rf "${uzip}/usr/local/share/fonts/Liberation"

chroot "${uzip}" update-desktop-database # Needed for mountarchive to be associated with the MIME types it can handle; TODO: Get rid of XDG

# Temporary workaround for https://github.com/helloSystem/ISO/issues/14
mv "${uzip}/usr/sbin/pkg" "${uzip}/usr/sbin/pkg.real"
cat > "${uzip}/usr/sbin/pkg" <<\EOF
#!/bin/sh
# Temporary workaround for https://github.com/helloSystem/ISO/issues/14
case "$@" in
  *freebsd-update*) echo "pkg freebsd-update is not yet supported in helloSystem" ;;
  *update*) echo "pkg update is not yet supported in helloSystem" ;;
  *upgrade*) echo "pkg update is not yet supported in helloSystem" ;;
  *)         pkg.real "$@" ;;
esac
EOF
chmod +x "${uzip}/usr/sbin/pkg"
