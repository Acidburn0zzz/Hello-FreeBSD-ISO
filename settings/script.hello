#!/bin/sh

# Exit on errors
set -e

# Be verbose
set -x

mkdir -p /tmp/system-overlay 
cd /tmp/system-overlay

# Wallpaper
# TODO: Also check
# https://papers.co/desktop/vg41-ribbon-abstract-art-blue-pattern/
# https://papers.co/desktop/vm16-abstract-blue-rhytm-pattern/
# wget "https://res.allmacwallpaper.com/get/iMac-21-inch-wallpapers/Minimalist-blue-1920x1080/1686-9.jpg" -O "${uzip}"/usr/local/share/slim/themes/default/background.jpg
wget "https://github.com/helloSystem/ISO/releases/download/assets/graphite.jpg" -O "${uzip}"/usr/local/share/slim/themes/default/background.jpg

# Icon
wget "https://raw.githubusercontent.com/helloSystem/hello/master/branding/computer-hello.png" -O "${uzip}"/usr/local/share/icons/elementary-xfce/devices/128/computer-hello.png

# Filer
wget https://github.com/helloSystem/Filer/releases/download/continuous/Filer_FreeBSD.zip
unzip Filer_FreeBSD.zip
rm -f Filer_FreeBSD.zip

# QtPlugin
wget https://github.com/helloSystem/QtPlugin/releases/download/continuous/QtPlugin_FreeBSD.zip
unzip QtPlugin_FreeBSD.zip
cp -Rf QtPlugin/ "${uzip}/"
rm -f QtPlugin_FreeBSD.zip
rm -rf QtPlugin/
wget https://raw.githubusercontent.com/helloSystem/QtPlugin/master/stylesheet.qss
mkdir -p "${uzip}/usr/local/etc/xdg/"
sudo mv stylesheet.qss "${uzip}/usr/local/etc/xdg/"

# launch
wget https://github.com/helloSystem/launch/releases/download/continuous/launch_FreeBSD.zip
unzip launch_FreeBSD.zip
mv launch "${uzip}/usr/local/bin/"
rm -f launch_FreeBSD.zip

# DSBexec
# FIXME: Get it into ports, and install it from a package instead
wget https://github.com/helloSystem/DSBexec/releases/download/continuous/dsbexec_FreeBSD.zip
unzip dsbexec_FreeBSD.zip
mv dsbexec "${uzip}/usr/local/bin/"
rm -f dsbexec_FreeBSD.zip

# Menu
wget https://github.com/helloSystem/Menu/releases/download/continuous/Menu_FreeBSD.zip
unzip Menu_FreeBSD.zip
rm -f Menu_FreeBSD.zip

# TODO: Get self-hosted gmenudbusmenuproxy
# because the one from pkg pulls in a lot of KDE Plasma
wget https://github.com/helloSystem/ISO/releases/download/assets/gmenudbusmenuproxy
chmod +x gmenudbusmenuproxy
mv gmenudbusmenuproxy "${uzip}/usr/local/bin/"

# Dock
wget https://github.com/helloSystem/Dock/releases/download/continuous/Dock_FreeBSD.zip
unzip Dock_FreeBSD.zip
rm -f Dock_FreeBSD.zip

mv * "${uzip}/System/"

# Symlink panda-statusbar in place; FIXME: Remove once desktop2app does not need to restart it from there anymore
chroot "${uzip}" ln -s /System/Menu.AppDir/usr/bin/panda-statusbar /usr/local/bin

# Utilities and Preferences
mkdir -p "${uzip}/Applications/Utilities"
mkdir -p "${uzip}/Applications/Preferences"
wget https://github.com/helloSystem/Utilities/archive/master.zip
unzip master.zip
mv 'Utilities-master/Zeroconf.app' "${uzip}/Applications/Utilities/"
mv 'Utilities-master/Create Live Media.app' "${uzip}/Applications/Utilities/"
mv 'Utilities-master/Install FreeBSD.app' "${uzip}/Applications/Utilities/"
mv 'Utilities-master/Boot Environments.app' "${uzip}/Applications/Preferences/"
mv 'Utilities-master/Desktop.app' "${uzip}/Applications/Preferences/"
mv 'Utilities-master/Keyboard.app' "${uzip}/Applications/Preferences/"
mv 'Utilities-master/Sharing.app' "${uzip}/Applications/Preferences/"
rm -rf master.zip Utilities-master/

# BuildNotify.app: Notifications about continuous build server status
wget https://github.com/anaynayak/buildnotify/archive/2.0.0.zip
unzip 2.0.0.zip
mkdir -p BuildNotify.app
mv buildnotify-2.0.0 BuildNotify.app/Resources
( cd BuildNotify.app && ln -s Resources/buildnotifyapplet.py BuildNotify )
rm -f 2.0.0.zip
sed -i -e 's|/usr/bin/env python|/usr/bin/env python3.7|g' BuildNotify.app/Resources/buildnotifyapplet.py
rm -f BuildNotify.app/Resources/buildnotifyapplet.py-e
mv BuildNotify.app "${uzip}/Applications/Utilities/"

# Lector.app: E-book reader
# Requires: py37-xmltodict py37-beautifulsoup
git clone https://github.com/BasioMeusPuga/Lector
rm -rf Lector/.git
mv Lector Lector.app
mkdir -p Lector.app/Resources
mv Lector.app/* Lector.app/Resources 2>/dev/null || true
( cd Lector.app/ ; ln -s Resources/lector/__main__.py Lector )
cp Lector.app/Resources/lector/resources/raw/Lector.png Lector.app/Resources/
sed -i -e 's|env python3|env python3.7|g' Lector.app/Resources/lector/__main__.py
rm Lector.app/Resources/lector/__main__.py-e
mv Lector.app "${uzip}"/Applications

# Sticky Notes.app
# Requires: py37-qt5-dbus
git clone https://gitlab.com/william.belanger/qtpad --depth 1
rm -rf qtpad/screenshots
mv qtpad/qtpad qtpad/Resources
mv qtpad/* qtpad/Resources 2>/dev/null || true
sed -i -e 's|/usr/bin/python3|/usr/bin/env python3.7|g' qtpad/Resources/__init__.py
rm -f qtpad/Resources/__init__.py-e
rm -rf qtpad/.git
( cd qtpad ; ln -s Resources/__init__.py "Sticky Notes" )
cp qtpad/Resources/icons/qtpad.svg "qtpad/Resources/Sticky Notes.svg"
convert -resize 256x256 "qtpad/Resources/Sticky Notes.svg" "qtpad/Resources/Sticky Notes.png"
mv qtpad/ "Sticky Notes.app"
mv "Sticky Notes.app" "${uzip}"/Applications

# Fonts
wget https://github.com/ArtifexSoftware/urw-base35-fonts/archive/20200910.zip
unzip 20200910.zip
mkdir -p "${uzip}/usr/local/share/fonts/TTF/"
cp -R urw-base35-fonts-20200910/fonts/*.ttf "${uzip}/usr/local/share/fonts/TTF/"
rm -rf urw-base35-fonts-20200910/ 20200910.zip

# Applications
mkdir -p "${uzip}/Applications"
chmod g+w "${uzip}/Applications"
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/chromium-browser.desktop /Applications/
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/featherpad.desktop /Applications/
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/qpdfview.desktop /Applications/

# Links on the Desktop
# mkdir -p "${uzip}"/usr/share/skel/Desktop
# cd "${uzip}"/usr/share/skel/Desktop/
# ln -s /Applications .

# More Preferences
mkdir -p "${uzip}/Applications/Preferences"
chmod g+w "${uzip}/Applications/Preferences"
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/lxqt-config-globalkeyshortcuts.desktop /Applications/Preferences/
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/fury-config-wifi.desktop /Applications/Preferences/
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/fury-config-xorg.desktop /Applications/Preferences/
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/arandr.desktop /Applications/Preferences/ -g
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/system-config-printer.desktop /Applications/Preferences/
echo "GenericName=Sound" >> "${uzip}"/usr/local/share/applications/dsbmixer.desktop
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/dsbmixer.desktop /Applications/Preferences/ -g

# More Utilities
mkdir -p "${uzip}/Applications/Utilities"
chmod g+w "${uzip}/Applications/Utilities"
sed -i -e 's|^Icon=.*|Icon=file-roller|g' "${uzip}"/usr/local/share/applications/lumina-archiver.desktop
rm "${uzip}"/usr/local/share/applications/lumina-archiver.desktop-e
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/lumina-archiver.desktop /Applications/Utilities/
# chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/org.kde.systemmonitor.desktop /Applications/Utilities/ # TODO: Find lighter replacement
chroot "${uzip}" /usr/local/bin/desktop2app /usr/local/share/applications/qterminal.desktop /Applications/Utilities/

cp "${uzip}"/usr/local/share/applications/usr_local_lib_qt5_bin_assistant.desktop "${uzip}"/tmp/documentation.desktop
sed -i -e 's|^GenericName=.*|GenericName=Documentation|g' "${uzip}"/tmp/documentation.desktop
sed -i -e 's|^Icon=.*|Icon=documentation_section|g' "${uzip}"/tmp/documentation.desktop
chroot "${uzip}" desktop2app /tmp/documentation.desktop /Applications/Utilities -g

# Desktop
chroot "${uzip}" /usr/local/bin/desktop2app /usr/share/skel/Desktop/computer.desktop /usr/share/skel/Desktop/
rm -f "${uzip}"/usr/share/skel/Desktop/computer.desktop

# Remove non-hello xessions desktop files
# to silence misleading messages from slim on the command line
rm -rf ${uzip}/usr/local/share/xsessions/*.desktop

# Finishing touches on installed packages
cp /etc/resolv.conf ${uzip}/etc/resolv.conf
mount_nullfs ${packages} ${uzip}/var/cache/pkg
mount -t devfs devfs ${uzip}/dev
# Workaround for: appmenu-gtk-module is not yet in quarterly packages; FIXME: install it from the packages once it is there
# https://github.com/helloSystem/ISO/issues/20
IGNORE_OSVERSION=yes /usr/local/sbin/pkg-static -c "${uzip}" add "https://github.com/helloSystem/Menu/releases/download/helper/appmenu-gtk-module-0.7.3.2.txz"
# Remove pkg (it will be bootstrapped if needed)
# chroot "${uzip}" sudo pkg remove -y -f pkg # Breaks furybsd-init-helper
rm ${uzip}/etc/resolv.conf
umount ${uzip}/var/cache/pkg
umount ${uzip}/dev

# Autostart
mkdir -p "${uzip}/Applications/Autostart/"
chmod g+w "${uzip}/Applications/Autostart/"
( cd "${uzip}/Applications/Autostart/" ; ln -s ../Utilities/BuildNotify.app . )
